
# Service Configuration & EMI Flow Guide

• **EMI Gateway Integration**: Covers integration requirements and configuration steps for different payment gateways supporting EMI (PineLabs, PayU, Razorpay, PTM), including gateway-specific API endpoints, eligibility checks, and validation processes for both credit card and debit card EMI transactions.

• **PineLabs EMI Implementation**: Details the complete PineLabs EMI flow including three core APIs (EMI calculator, validator, transaction), service configuration mappings (pinelab_offer_mapping, pinelab_emi_transaction_mapping_code), offer vs regular transaction handling, and validation logic for standard/low-cost/no-cost EMI types.

• **Configuration Management & Debugging**: Explains critical service configurations like Gateway Bank EMI Support (GBS) table entries, network/issuer token support across gateways, logging strategies for troubleshooting EMI failures, and integration checklists for merchant onboarding with EMI capabilities.

---

Okay. Uh so
Okay. So before starting uh can uh can we discuss like what all topic what all things regarding EMI uh do we need to discuss so that uh while giving the KT we can keep that in mind. Any doubts you had regarding a particular flow or some configs. Sorry Rahul. Uh in this KT what are we concentrating about like general EMI configs or specific to any gateways?
No no so basically this uh call will be general generic only uh all the basic configurations and EMI flows and all.
Uh so we wanted to understand what all the config specific to each gateways which config to be enabled. How uh uh if any bank codes needed to be added what will be the key value how do we know this is the key and this is the value and what will be the flow like if it is DCMI let's say for pay you we have this uh eligibility check right
what is will be the flow what will be the API calls we will be doing it they can check.
Okay.
Um say Rahul for example if a merchant is coming up and he says he wants uh EMI a credit card and debit card EMI
then one thing he might specify the gateway or other thing he might ask in general tell me which all gateways supports uh which all flow and what are the steps.
Okay.
So these are the gateways that I have and These are the steps uh they wanted to know up front like okay say for pine labs these things I have to do for razor pay these things I have to do. So right now what happens right when somebody comes and ask about EMI uh each time we get confused okay if it is pine labs what are the steps we have to follow if it is razor pay what are the steps we have to follow so we have that confusion at an individual gateway level also at an overall you might for CC there are one types of steps for DC there are some other steps. So the overall EMI as a product itself is not very clear. So if you can start from the basics of how each the flow how it works uh and
across each gateways and internal configs external configs that have to be um enabled that will also help. Uh V u you can add if I have missed anything.
Okay. So basically while integr only we we are not very clear key what all things do uh do we need to configure for EMIs correct for across gateways
yeah two things one during integration itself say they are coming up for few gateways we are quite we know what needs to be done but for the overall team members to know I feel it is better and other thing is is that when they come saying that I want an additional bank to be added or I want to add some support a new bank uh for DCMI or CCMI. What all should I do?
Sure. Sure.
Uh and also we have several APIs right. So when somebody says that okay this is failing how do we go proceed for debugging?
Uh okay any specific API because this could be like a very vast discussion then uh any recent cases where you remember No, most of the things that comes up with pineelabs only. So say in pineelabs we give justp client or we give some error. So then we first go check what is the uh API response. Are we getting the uh EMI plans then we'll see validate validate API we'll see if the response is coming then okay if offer is applied not applied. So this is how we were currently doing it. If you guys have some easier steps uh to say like okay If this is coming, this could be the possible reason that will ease out our uh debugging.
Okay, got it.
Maybe we can cover one portion of the discussions today and maybe next week or so we can continue u the rest.
Yeah, understood. So basically uh all these things will take a lot of time. So what I was thinking is maybe for this session maybe what we can think is uh uh we can go through the various config important configs for uh various gateways which we generally require while integrating a particular gateway. So that is one thing which we can cover uh the integration checklist which you're talking about while uh when a new merchant is coming and they're asking for uh integrating with Pine Labs or PU maybe we can uh so that instead of giving a KT and all what we think is we can maybe create a documentation for that that will be helpful for future pers future perspective as well.
Sorry. Rahul to say this. Uh when we had previously discussed with a few folks from Oiler, it was uh told to us that they'll share the document and it's been uh quite some time. We haven't received anything yet. Uh even after multiple follow-ups. Uh so if we are going to prepare a doc uh uh would be better if you can give us a timeline and ensure that it will be shared by then.
Sure. Let me just connect with Vive once uh and Can I give you the timelines on Tuesday once I have a connect with him?
Yes. Yes. Sure. Sure.
Ideally uh integration checklist maybe we can create two check kind of checklist. One checklist will be like the basic uh uh basic things will be common uh which which is common basically for all gateways and another will be like gateway specific changes. So that uh would be helpful as well that I check with uh someone and let you know the time. Will that help?
Uh yeah Rahul that would help.
Uh and Rahul uh we need the flow also one KT on flow like which API call we do this PG like let's say if it is pay you then we in V2 EMIs we call this endpoint and if it is a DCMI we call this endpoint. So kind of API flow also we need uh okay. uh what you so uh so the API calls so we can check through a successful case on cabbana or something
but still logging issue is still there right
what's this logging issue
um so Rahul uh it's like we don't know right when an EMI is being called is it only one API that is being called or there multiple calls so uh say for example when we take uh some transaction log only we could see for some APIs there are there are logs missing okay so we don't know if log is not there or if there is no actual API calls so once we get to know that okay for pay you this is the only API call that happens then we will go check the logs and see what is request or response now say for example pineapse has three API calls of which if we miss one could be log or something else we don't know if it is actually called or if log is missing for us to know that okay there is three API calls we need to know right for this gateway these are the calls that happens so without knowing we will not know okay there should be three calls and this is how we have to debug
okay so I think log miss would not be a case in majority of
one more issue is something is not in kibbana which is only in log and uh so those cases we we might not know So for pay you I know for DCMI response. Now in Kibana if you see it will be login not supported but I have to take the session ID put it in log viewer and then check for a particular key to know what is the response we got from payu. So from logs now it's getting difficult because the kibbana is not having all the logs. So some logs they have put it in log view some logs in kibbana. So if you could just tell me which endpoint at what point we are calling. We will we'll check those things
and then which plans to be configured in DB and which plans we will get in EMI response itself.
But uh I think like for Kibana anyway like we are removing a lot of logs. So for any kind of debugging we should ideally use log only. Kibana may we are only keeping the critical logs. No DB entries, no DB entry logs nothing. M
for any kind of debugging we should be using log view only.
We are using log view and just see we for pay you I know the key I will see.
Uh no point is that Rahul if I know that this is what it is I can directly go and uh find the details right if I'm not aware then I'll have to spend some times against seeing what each log line is. So if you're aware that for this this is the endpoint then I can directly go check and uh see okay what is the request response we have received. It's just for our information. We just wanted to know which all API calls are happening. That's all.
Sure, we can go through that. Uh but again, gateway wise would be a lot of uh uh information which is not required. Maybe we can give you like a basic endpoints like for this is the call for initiating transaction and all those things but not for each and every gateway that maybe like if you have any gateway specific thing then maybe we can discuss that later. I understand like pioneers is one of the issues where EMI and offers when both are applied there is some confusion and there is some knowledge out there. So maybe we can uh go in detail and pay you
PTM also Rahul PM DCM will not is not working for any merchant I think
they have some see like payu has a eligibility check on mobile number on a separate API but PTM does not have that. So What I think is we are passing the customer phone number which was passed during customer creation which is not the linked number to the debit card. So those kind of things taking time.
Yeah Rahul by the way like this topic is very huge right there are so many aspects. Uh just take one and in today's call we'll cover that maybe in coming weeks we can cover.
That's that's what I wanted to discuss. So basically gateway wise maybe we can have a separate call but this call is mostly so this call was started with uh various configs which are uh uh getting called in EMI flows. Uh if you want to understand EMI flows in detail maybe we can have a separate call with moan and vive on the call as well and for integration checklist yes we need an integration checklist because I also see that there is some gap in understanding so that will be helpful for future merchants onboarding EM EMI also so that that I can can uh share you the ET and all but let's to for now let's focus on configs other things I'll have uh I'll keep that in the pipeline and maybe have a separate call for that
yeah sure we can start
okay nextam you can take it forward
hey hi am I audible Yes. Yes. Uh so many conflicts that we'll just check the
what you can take is uh take a particular let's take it
and hey uh can I start with pilabs gateway directly because it has uh uh the most number of issues you guys are facing right. You're next. Yeah,
sure. Okay. So, Pine Labs uh we can
can you present your screen uh so that you'll follow?
Is my screen visible?
Hello.
Yes, Max. It is visible. Sure.
So when it comes to uh pineapp right, we'll direct uh we have three APIs. One is uh pineapp calculator. One more is validation EMI and validator API and third is transaction API. So these three APIs are used for completing the pineapp transaction. So pineapp support low cost no cost uh standard and uh with some offers also. Pineabs will support uh offers from their end. So for these three uh these four things I'll be giving KD uh next is uh uh binlab support DCMI. Are there any segregation between CCDC or it is these conflicts are irrespective of CCD? See
uh this is irrespective of uh CCDC actually we won't check for uh pineapse I'll give you an example okay let me start with pineapp calculator API okay so if you check the pineapp calculator API uh when we initiate this uh when we get the / txns API right in this /txns API we'll get uh we'll uh we'll receive the details first uh in order okay let's take this one by one so in order create if off is offer applied is a field in the order create request if we have passed that field then that is offer like full swipy transaction where offer will also be applicable based on the EMI transaction also okay so this is the pineapse EMI calculator uh response the first API we'll call when we call / txns so this will give the uh MI EMI details. So for pin labs uh the EMI details will be shared by Fiji directory itself. So if you see here uh it will be giving for both debit and credit card EMI based upon the uh based upon the product detail which we pass to the merchant right the product code and the amount based on those details uh PG will give us set of EMI plans which contains both debit and credit card plans. I'll give you a sample uh for both credit card and debit card. we are doing from uh web browser right web browser or SDK it will show we'll call this API like when we call the SL session API right we'll call SL session API we'll load the SL page URL at that point of time we'll call this EMI uh EMI get EMI plans or V2I plans and show the merchant what are all the EMI plans configured like available from PGN for that particular product code so we'll select that product code We'll select the uh particular bank which is displayed and we'll uh initiate the transaction actually. Uh so if the amount passed so first error will be the amount passed and the amount passed in the order basket if those two doesn't match uh the PG will give some uh error actually based on the uh we'll consume the response and we'll validate whether these details are present if the details sent by PG is not present we'll give empty response so when we pass the product amount uh the amount present in order basket equal to the order amount we'll get some valid response from PG end so if you check here how do we segregate BMI plans uh is it is a debit card or a credit card. Hello.
And I have one question here. So if the order amount passed um the amount passed in order amount and order basket is different. Is there no validation at our end? Are we directly calling PG with whatever info that we have received from merchant?
Uh yeah Anjali we are not validating.
And I think this EMI plans right? Uh this will have EMI plans for all. the gateways right the order basket if they have passed or not passed let's say that EMI plans the merchant will call generally right it's he will not call for a specific gateway correct he might have three gateways configured he'll call all three gateways with a particular amount which are all the uh EMI plans present for these three gateways correct
yeah
so currently we haven't that's that is the reason we haven't added the validation at EMI plans level V2/ EMI plan But in order level we have added this validation for uh order basket you know plans if I if the amount is mismatched I don't give only p I will not give pine plans but the other three gateways which is there that we can give those plans right we shouldn't give uh error on the first place this will cause to fail the EMI 400 in the API itself
okay so you're saying that Even if pine labs pit has failed, we'll still give the response for others. So we will not add this validation because order basket might not be required for other gateways.
Yes. Yes. Because the v2 basically fetch the static email plans which is already configured in the DB, right? So only pay you and pine will call the gateway and gateway will give you the plans. But uh the razor pay and all we have the static plans configured and we will fetch it from the DB and we will give it right.
Okay. Sure. Yeah.
So if you look in the uh EMI response we have uh PG is given properly like for standard this pro for low cost EMI we have these plans for credit and debit and for no cost EMI we have these plans for credit and debit. You can check for like what is the car type here credit and also debit. Uh PG support both credit and debit based on the product details you are sending right in the product ID based on that you are getting the EMI plan from the PG sand. So we'll consume product details and we'll construct our own uh response to the uh to show in the front end. So if you check here uh we'll check for tenure in month uh tenure details those details are fetched from back end itself like in the PGM uh PG API call response itself we are fetching these details. So after fetching these details uh we'll check for uh merchant will send uh so we'll get /dxs response uh / txns request in that we'll get EMI type what kind of EMI low cost no cost of standard uh what bank the merchant has the customer has used for uh initiating the transaction and based on this we'll do the uh we'll do first pre-transaction validator if pre-transaction validator has uh it will check whether the EMI details what we have got right in the /txs request are those details correct or not in pre-transaction validator we'll check for few service configuration keys here the first service uh I'll go through the
sorry uh max one second so in V2 EMI plans there is only one um API that we call pine labs
yes
get EMI plans uh no that is EMI calculator plan that is PGC API uh in front from uh our end we'll call V2/ EMI/ plans.
Huh? Ours is V2/ EMI. The corresponding API of Pine Lab is
uh EMI calculator. Um
only one.
Yeah, only one. To fetch the EMI plans, right? We have only one API to validate and continue the flow. We have uh two other API validator and transaction flow.
Uh that is called in the
while TXNS is processing. Right.
Okay.
That point of time it will be giving the response. Uh we'll call See as soon as you we as back end gets the /txs request right we'll simultaneously consume this detail do a PG call to get the EMI plan we'll get the EMA plan again from PG end we'll do validation based on the plans detail which is shared in /dxns and also the plan detail we get from PG directly while calling / uh while during the /dxs call this happens in the pre-transaction validator function So if you come here
uh when upon txns we again do we again call EMI calculator or we directly call EMI validator.
No we'll call again EMI calculator and again we'll uh we there's a series of validation here actually pre-transaction uh validator means uh you'll call /dxns right you'll call /dxns we need to validate things like is it a offer transaction like is offer applied is sent by merchant for this transaction and is it a low cost, no cost or standard uh standard uh EMI transaction and for these whatever the bank details merchant has or shared right do we have the corresponding EMI plan the EMI response uh EMI calculator response we need to validate those details so after validating this itself we'll give V2 pay start to merchant we'll return back to V2 pay start or else we'll give just by decline
okay so EMI ator EMI validator then
uh uh we'll call these two after that / transaction will give the transaction URL right we'll load the uh we'll load V2 paste that means we'll call transaction API of uh PLABS
okay
so uh in pre-transaction validator uh there are few steps we'll follow one is we'll check whether this is a regular regular EMI transaction or full swipe transaction how do we identify is it is full swipe transaction is merchant will send uh e uh is offer applied to in order create in metadata field you will send this uh usually this is sent in session API also if you check the some session API requests for EMI plans for pineapp through chroma you can observe this most of the times so their merchant will be sending is offer applied true so we'll validate the type as offer applied here so we'll check whether this is a full full swipe transaction or a regular EMI transaction so if it is a full swipe transaction we'll get a offer bank. Uh we'll try to uh there is a service configuration to get the bank details for offer related changes uh full swipe transaction that is timelapse offer mapping. So this is the uh key this is the service configuration key which we'll check in our DB whether this key is present. Based on this key present or not we'll uh we'll give whether if the key is not present we'll give offer bank is not configured and we'll give some just decl uh config like what is the value in sandbox or production uh
anything just production whichever is fine what is the value and then Sure. Push it. So this is the value actually. So we will get this details uh whatever you have any doubt in this how we are doing.
Okay. Okay. We'll check here. Uh
yeah. I'll go one by one in this.
M okay.
So we got this details, right? We got the uh we got the offer bank. We'll get the offer bank details. We'll try to validate the request again. Uh the /dx request is there, right?
Okay.
We'll try to validate that. Uh so for pineapp offer transaction we need emi tenure as one. Uh there are two things we'll check if it is offer transaction or not. So we'll check is it in EMI tenure. we'll get EMI tenure right in /t transaction API request. Therefore fully transaction merchant won't usually send EMI tenure as one. So we we by ourself will update that value. We'll set that EMI tenure as one for full swipe transaction. So only for full swipe EMI tenure should must be one only one month is supported in full swipe transaction. Any doubt in this part?
Okay, I'll continue. So, yeah. Yeah, tell me what you
I think fine you can continue.
So, after we are getting the offer uh this uh we'll try to validate the request, we'll set the EMI bank as the whatever the bank sent in the /transaction request, we'll set the EMI tenure as one. So, We'll get the EMI plans uh for this pineapp account details. We'll fetch it. We'll calculate the we'll again call the EMI calculator request here. We'll call the EMI pineapp request again. Okay, we'll get the response. After receiving the response, we'll we'll validate the pineapp response. To validate the pineapp response, we'll check for one more service uh one more service configuration that is uh pilap code mapping. So this contains our side of mapping. What are all the bank codes supported for pineapple? This mapping is stored in this EMI pineapp transaction mapping code. Okay, we'll take this one. I'll give the value of this also. So these two are the keys uh min keys which we will validate for pineapp offer and normal transactions. Okay. So I'll continue here. So I got the EMI plans uh I got the list of bank code supported. If you see here what is the EMI transaction mapping code? It will be like what is the bank code we have and what is the corresponding code we are mapping with so in uh / transaction merchant will send HDFC HDFCDC as the bank name all will be stored here okay so we'll get the EMI uh we'll call the EMI response and we'll get the mapping so we'll take the uh we'll go to the plan we'll take the specific block here If uh EMI plan validate EMI plan first we do EMI tenure so we'll take issuer uh in the EMI mapping is there right uh pilots response if you see the uh request body there is two things uh like few things here this is main JSON of this inside the main JSON there is something called issuer response code response message three fields are present inside that will come em list of EMI tenures. This is a array which contains like how many uh supported banks are there for which uh which flow these are there like these details will be present here. So in that if you come here uh it will give offer scheme product detail what is the product detail we are sharing EMI tenure and these details if you if you inspect like if you look uh correctly it will give what is the issuer name like which is the bank for which this EMI plan is for. Okay this this detail will is shared in the pyabs response. We'll check for this field issuer name. We'll take the issuer name. So in that issuer name we have for this HDFC itself. If you consider there are two EMI plans. This is plan one and this is plan two. This is of tenure. 9 months. This is tenure of 6 months. There are two different tenure months provided for HPFC in uh for uh credit card EMI tenure. So we'll take this one. So we'll check the fields. We'll traverse through this entire response. We'll check for the issuer. We will take the issuer and we'll also check with the EMI offer banking list. So here issuer name is present. Right? We are getting the issuer. From issuer we checking the bank code. So we are get we got HDFC right we'll check the bank code here for HDFC HDFC is present. So then we'll take the uh HDFC again and we'll do the bank list EMI. So there are two uh different service configuration we are validating the response against each other so that the there is exact fields are present in this tenure list itself. We'll take HDFC. We'll take an issue name. We found the bank code issuer name. We got the bank code like it's a uh record, right? Uh record contains multiple uh like it can contain many plans. We we got many plans. In that we'll check for particular plan itself here. So we'll come here. We'll check We'll check the EMI type. Is it a standard EMI, no cost EMI or regular EMI? And we have newly introduced uh standard EMI split also.
That is not like you can skip that.
So if it is a uh if it is not standard EMI, we'll check like regularly. What we'll do? We'll take the validation type as offer. If it is not an offer, we'll get the EMA offer type. It doesn't come down there itself that validation one.
Got it. Got it.
Yeah.
So here uh for offer thing is there right? Uh we were facing many times like for Kotak DC and other things when pulsip was happening and we were not able to get the uh get the EMI plans right. Uh because uh in slash transaction All we'll get the car details from the merchant right from the user we'll get the car details from car details we'll take uh we already got the bank list EMI offer bank list we already got this particular key so this particular key we already got from we already storing this key if this key is not found we'll show or throw error offer not So we'll get the service configuration key. If the key is not present, we'll throw error just by decline. If we have got the code uh if we got the uh EMI plans or EMI offer mapping, then we'll take that. We'll check the bank code list. We'll try to match the uh in TX and card info. We'll store the what kind of card is this? What is the issuer bank and the card kind? Is it a credit debit? Which is the issuer bank? If you see for some transaction there will be like for Kota BC it will be like Kak Mahayandra bank and issuer car type as credit. So we'll combine these two and we'll give one key as the response. So if you check here so for Kotak Mahindra bank credit this this entire thing should be stored in our uh TX and card info. This is our bank name is your bank name and car type. For that we will have kota. This is our mapping which we second EMI response. So when we do the EMI calculator request right so we uh the issuer name should match with this same thing whatever the uh offer mapping is there right with that pinlapse EMI mapping should also match then only we'll allow the transaction to validate else we'll again fail the transaction with offer validation field that After this is done, we'll call the validation API. So uh so we got all the details correctly like month, tenure and plan details uh like bank details. Then we'll call validation EMI plan. At validate EMI plan, we'll call and validate with PG. So you can see here we are calling the EMI validator request. So this is the validation API. This URL will be called v2/ scheme/v validation. This will give us response whether this uh whatever the plan selected by merchant is valid or not. Based on the validation response, we'll continue the flow here. So we'll get all these details and we have validated successfully. Then we'll go back to the main function. Just we'll give the specific error. Uh EMA validator got error response from gateway pineapse. Yeah, we'll give the specific error message and we'll uh give just by declined error. If not, we'll uh we'll give a proper v2/ page start URL with the uh /dx response. After loading the /dxs response, we'll go to pinap transaction API and we'll complete the flow there. Uh see, from anything I missed?
No, no, I think you can also show that your local is running right. You can show one transaction and you can show the subsequent API calls which is happening for PG
when we load the start and uh before this thing.
Sure. Sure.
So this is my uh this my local setup I'm using uh product ID this one description and uh these things are like these are this is completely test environment so I'll show you these things I'll clear one minute
yeah sure
uh why is this display decline if it is failing it for verification
max if it is failing in uh scheme validation right uh then pine labs is rejecting that uh thing right so rejecting our uh details which send is not correct right that's why we are uh we are throwing validation
very just by decline can be of many reasons okay one is that there might be a we got gave EMI plans and uh for that particular issuer the merchant might be passing the wrong tenure ID that is also possible and they might be passing the wrong uh EMI bank name All these cases included we'll throw just by declined if there in case of a correct issue uh EMI bank and the wrong tenure that validation API of pine labs gets failed and we will throw respect decline. See here the details are not corrected we are if the validation API give proper response whatever the details we have if those details are correct we'll allow for validation. If validations also fail we cannot allow right. PG might not support this through some uh subsequent error
it was some validation done at pine labs in right we are sending details and pine labs is rejecting it for any reason like merchant passes it wrongly or we are passing wrongly but it's not static client right
it's similar to transaction right we initiate it to gateway and then there might be a parameter we are passing it wrong that doesn't mean we are marking all the initiation to just be declined right or merchant passes wrong
initiated the transaction with uh find steps here we are just validating the EMI plans here right
the transaction is not yet initiated uh see uh this this validation right whatever the validation it's an S2S call it's happen in between when we give the TXNS response right at that point of time it happens okay the based on the tenure ID which we pass and whatever the issuer name which we pass right based on that this validation happens so once that S2S call of let's say pineabs fails and we cannot process the transaction right I cannot mark it as authorization failed also directly
there are some cases even pineabs this validation validator EMI might not response or time out those scenarios also should be considered while giving the flashd response right
okay because what merchants impression it's getting failed at just pay uh itself that's what merchants uh think That's why like uh we we are failing it before initiating it to gateway
but yeah we are so here is like there is some genuine reason to fail right not because we are abruptly like our side server is failing or something not like that right it's due to either some validation failure or pineapse pg failed to respond these two are the main scenario where we can give this error right
okay sure So, so I'll do some sample uh finance transition. got reported was like EMI transaction/txs call we are getting uh can't find suitable gateway right things are in started state and we are not able to process the transaction
yeah
correct most of the things are like uh
and mapping
huh GBS mapping so we have something called gateway bank EMI support table okay in that whatever the banks which has been supporting the EMI right that has to be added in this particular uh gateway bank EMI support table. Okay, this has different scopes also. One is issuer token, one is network token, one is card. So, uh issuer token or network token will be for the saved card transaction and card will be the normal card transaction. Raw card details we pass it right based on that we will pass this. Okay, so this DBS table entry we need to check that first because any new bank has to be added for EMI. First it has to be added uh in the GBS table. That GBS right will be one which gets filtering for the decider calls. Okay. We have to check what is the scope and what is the transaction and what is the token. In case of tokens issue token and the network token currently for saved card network token EMI transactions supported by PUTMBB 2 and HDFC I guess apart from that uh no other gateways will support that.
No no can you repeat the system last part?
Uh no the uh issue uh network token EMI transactions right I think that will be supported by PTMv2 pay you
uh Razer Pay and SDFC only these four uh gateways will support uh network token EMI transactions.
Okay. Okay.
Apart from that the other things will not support other gateways.
Issuer token
issuer token currently no gateways will support that is only for HDFC DS card right
that they will have that issuer uh token thing and uh currently we are not having that DUS with issuers token currently that entry is also not there and uh SDFC also if they start supporting we need to have an entry in our uh GBS table card type and the scope.
Okay. Uh shall I continue?
Yeah. Yeah. Uh so I'm creating offer for uh I'm creating an order for 30,000 uh EMI transaction. The EMI is uh HDFC low cost EMI. I understand. Next, you can use the car details which I shared with you. Now, Uh was there any change? I'm not able to hit this AP. We are getting time out from their API actually. time dot can you use this credential which I'll share and use the product code as I'll share the product code also use that this is the credential I think I'm using the same one.
Same one.
Yeah, same.
Okay, I'll give you the product code. Oh,
I know the product code. I'm using whatever the previous product code for this merchant. This is the product code, right?
Oh, that depends. Okay, that is fine. Time out from their API. See?
Yeah. uh we have configured this in sandbox right some mid we can try internal MI has this offer configured uh use this product code and MID is this No change in your access code. How much? Same
am I? You can pass anything. 40,000. Same card number five. I see. I see. I see same. Pass the M. standard standard_ I'm not sure it's not working. AP is not working.
They're saying duplicate request somewhere.
That is different. We take a production you might order ID just check the log check the logs don't replicate this if it's not
sure uh what Anjali we can try to get uh one prod order ID and we can check for that one that will be also be same thing for chroma.
Yeah, I for chroma itself. Okay. So we'll take the slash order first order create will check what are the details asked by merch here. So We'll go one by one in order. uh because here apply offer is false. So is passing order basket inside order basket is sending product ID, quantity, unit price. So here the order amount and unit price amount both are same here. Okay. No cost to Okay, these are the like basic things we'll validate. Then in /tx call is sending true emci 10 year 6 months. Okay. So I'll take the session. This is the session where we'll do the validation uh before trans before giving the requ uh like we start we'll do the validation here. So this is the same session where we got the /dxs request. So we have called slash uh / pineapp calculator. This is to like I said in the flow, right? First we'll get the response then we'll validate our details with the response here. Uh the is the issuer is present and the car details for the bank and the card brand card brand which we got in /xms request are valid. If this is valid then we'll go uh we'll call validation API. Else we'll throw offer validation field like when we not get the Pine Lab offer mapping uh list will throw offer valid uh no offer no bank code found that just with that error message after finding that and if bank code doesn't match we'll throw offer validation field if both the things are pass in validation we'll call the validation API in validation API will send the product details and interested those uh those This will be sent to merchant sorry send to PG. After that PG will give us validation status response. You can see here validation status response and message message is success and response code is one. After consuming this we'll give / txns response with uh with uh pay start and those response pay sl uh same thing same session.
So after validating this thing itself we'll give the slash uh slash p start for the merchant to load this and continue the value here. any
so once V2 pay is loaded OTP and everything
that's PG and customer interaction
when we call the PG transaction API
uh uh when
payment and process payment
yeah when we'll call the PG PG through accept payment we'll get the response we'll complete the transaction we'll uh complete the flow there
so uh when we call accept payment we get a token of some kind right from the PG
token I'm not for Why are we calling accept payment and process? Okay, we got uh we have authenticated here and we are processing the transaction here actually. So the initiation part will happen. in the initiation API itself this is just after validation we get the OTP right we are validating the uh PG will be validated we're calling the response authentication process this actually
and can you also list down all the configs which are called uh all the service configurations
yeah sure these two are config
because that is the main thing right all the service configurations which are called rest everything uh and we can check through the logs
logs in TX and card info if you check for issuer bank and card type will get this uh will validate this first thing offer mapping will get validated for if this supported or not if this for this uh bank this uh for whatever the merchant sending bank right we are supporting or not we can check for pilap GMI transfer these two things share this with you
share in this video
I think it won't take this much long any doubts will Anjeli any doubts?
Um, no. Thanks. Nothing as of now.
Um, others any doubts?
Nothing from Sure. Um, so are we continuing with other uh PGs and the steps or we'll take it up in the next call?
Yeah. Hi. Yeah. So, basically I'll just share you a document which I was just making on the call. Uh, I'll just mention all the configs which are used for this order ID which we just checked right all the configs which we have checked and all the tables which we have called in so that there is one documentation uh for the entire flow. just share it in some time and if you if you have any question you can just mention that in the document itself. Will that help?
Yeah, that would help Rahul.
So yeah,
thanks a lot. Thanks a lot for your time. Thanks. Thanks. Fantastic. Bye.
