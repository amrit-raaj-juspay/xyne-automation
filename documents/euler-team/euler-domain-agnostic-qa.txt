# Domain Agnostic QA - Multi-Tenant Architecture Guide

• **Tenant Architecture & Requirements**: Explains why multi-tenancy was implemented for white-label payment solutions (like HDFC using the system with their own branding), the difference between tenants and resellers, and technical requirements including separate domains, endpoints, and branding while maintaining cost efficiency.

• **Technical Implementation Details**: Covers tenant identification through X-tenant-host headers, database separation strategies with logical schemas, tenant-specific configurations (PII encryption keys, payment methods, tokenization providers), and validation mechanisms to ensure proper tenant isolation.

• **Testing Challenges & Multi-Tenant QA**: Discusses testing complexities across multiple tenants, real examples of bugs where changes worked for one tenant but broke others (loader issues, payment link redirects, email notifications), and strategies for comprehensive testing including automation approaches and tenant-specific test scenarios.

---

Should I have a docs or something?
I'll share it later. Maybe I don't have a docs, but I'll prepare one. I need to share it.
We have the one that cont Okay. Okay. So why okay first of all why do we need tenants? So this requirements came because we had a merchant like HDFC came into picture. Now like normal merchants what happened is they get onboarded on just pay and they perform transactions right but very specific use cases started coming where a merchant decided to come and use just pay or express checkout as a white label product. to onboard their set of merchants. So, HDFC would have its own set of merchants. They were planning to get onboarded on just pay and use express checkout. But as a white label product, when I say white label, you wouldn't see a lot of just pay into the like no just pay loader, no just pay branding. Everything would be HDFC's branding, HDFC's look and feel. So, uh so basically we would be like the tech uh tech service provider to HDFC. Merchants would directly interact with HDFC. HDFC would be the one to onboard merchants in a way. we would not directly interact with the merchants who do the transactions on the system. So this is the first requirement that come. Now the the the question was then we had one question that should we onboard these merchants as a like HDFC like entities as a reseller or as a tenant. Now how do you decide what kind of a then how did we decide to go with tenants? So the requirement that HDFC brought was something that was beyond the scope of a reseller. Like reseller may currently what are the things that a reseller can do? They can onboard merchants. They can probably receive web books on behalf of the merchants but they could not control a lot of things like they could not control what features a merchant wants they could not control the priority logic of different merchants and here resellers could not perform a transactions on a separate endpoint like here uh normally when you call API you use say API jaspin now because it's a white label product you cannot use just anywhere so they decided to come up with their own domain smartgateway hdfc.com this was something that was not in the reseller scope so we decided to come up with a and also Bigger thing is HDFC would also have the scope of onboarding a lot of resellers. So if you made HDFC a reseller then you cannot allow HDFC to come up with more resellers right. So we need something needed something higher than a reseller. So then we came up with a concept of tenants. What what would tenants do just we just like HD just pay is someone who can onboard more resellers and onboard merchants. We will have more entities at par or having the same rights that what just pay has. So HDFC became a tenant. HDFC became tenant and now I think you guys are aware HSBC is also coming there will also be a tenant any entity that so one basic prerequisite could be that anyone who wants to use oiler as a white label and wants to onboard their own set of merchants could be considered as a tenant provided they come up with their requirements of you know specific branding uh specific endpoints then we can consider those merch uh those entities to be tenants. So so if you see uh in this uh screen what a high level Okay, what are the things that we want tenants to have? Uh okay. Uh there could one also one possibility was do we want to give a separate stack like just replicate oiler as an entire stack as is for every tenant that comes but we did not want to do that because of a cost implication like every time you replicate a stack it will cost as much as setting up an entire oiler. So we did not want to give them their own stack their own clusters and all that would be too much of a cost investment. So we wanted to have a tenant architecture in a way that cost is also at minimum but we could have that isolation that probably any changes that we are doing for just pay if not required by other tenants does not affect them. So uh one one rational was keep cost as minimum as possible. Uh the second rational was how easy will it be for a merchant to move in and out of a tenant. So tomorrow if a merchant is under uh HDSC how if you want to onboard the same merchant say under a separate tenant how easy it is say say for example Indigo. Indigo is coming is currently a Jasper merchant but tomorrow if Indigo wants to be a HDSC merchant also how easy it is for us to uh get that uh movement. Um so these are some of the basic reasons why we wanted to have a tenant and why it has to be higher than a reseller because it was almost the same level as just payp because it was doing almost everything that just payp was doing for its merchants. Just pay would still be slightly higher because just still has the access to control a lot of configs for its tenants which I think you cannot give to HDFC like a lot of service configs and all just still has the access to control. So slight higher but the idea is the same whatever just pay has access to provide to its merchants HDFC or other HSBC like tenants can also provide now what are the changes that we have done uh uh if you go to domain so what are the changes that we have done any tenant that is coming one pe requisite is they will not be using API or just domain they will be the ones who will be coming with their own endpoints so uh how does that work is uh so for HDFC what we have done is they uh so HDFC brought a new bought a new domain they So all the they have they they have hosted this domain but internally what we have that is any request that comes to that domain will be then routed to just pay. So uh that that's why you see a lot of if you do a transaction right now with an HDFC merchant say a smartgate.hdfc.com/tsns it will work because internally just but merchants on the face of it are seeing it as an HDFC uh HDFC endpoint. So what are the different things that we are giving? So uh a tenant can have its own domain. It can have its own uh payment page branding. It can have its own endpoint for the dashboards. So the dashboards also that we are giving to the HDFC is not again API. It's a separate uh hosted dashboard with a separate branding of HDFC. You will not see just logo anywhere. So they are have their own dashboards. They have their own endpoints for payment page for API calls. Uh more or less yeah there the developer dogs that we have for just we have replicated that also for HDFC as a separate uh with the some APIs that they needed we have replicated on their domain and we have hosted that separately so that their merchants do not even refer to our developer doc they have their own developer doc hosted at HDS um
is the DB same
h we'll come to DB
so uh till now it was the same but we are doing a track where we will have separate logical separations for different tenants like for example right now if you see all the tenants were under like every transaction was going under one DB, JDB and all the tables were there right now. I think Kalyan, hersa, they're all doing a change where we will have different logical separations for different tenants just like just will be under JD, HDFC will have probably HDFC separate separations. So database will be the same but we will have separate logical separations like and I think schema will also be the same. It's just that we will based on the tenant we will decide which logical separation to go.
Yeah. Which database like will be convention like a JDB or JD.
Mhm. So like JD HDFC JD_ HSBC as and when the tenant comes we will do that separation as of now it's not there we are working on getting that so what other things are there in like anything keys
oh yes keys huh so one other feature is okay one other feature that we give tenants is you know we are doing PI encryption right any database any PI that we are storing in our database we are encrypting it using PI tenants have this feature where if they want their key to be used to encrypt their PI data their merchants PI data we can do that so right now just pay merchants their PII we are storing with our key but HDFC merchants their PI data we are storing with HDFC's so that way we don't also do not have access to HDFC's PII data so that is also one level of isolation that we are doing this you want to add anything you want to add anything I think in case of what we have for tenants Yeah, I can hear you.
I think you mostly covered everything which is required for here.
Sure.
How we detected a bas now? Now the main question how do we when your transaction is coming to you how do you realize that it's HDFC merchant or a just tenants merchant. So what we do is uh right now envoy has done a change that any uh uh like they have added a header X tenant host So any so when a request is coming to our envoy it will automatically detect the host that it is coming from it will append that in x tenant host oiler has done that change where they will fetch x tenant host and we we have two tables we have created two tables just to identify tenants one is tenant account and one is tenant info I think there's one more but we told tenant account tenant info and is there anything else right so these two are there so in tenant account what uh should I show you the schema also you have access to MySQL sandbox you can see what the table looks like.
So tenant account you basically any new tenant that onboards you will create an entry there
settlement accountant. So what are the things that we store in tenant account? any new merchant that comes, what is the name of that tenant? Uh sorry uh date created date modified. Um external metadata cards config tenant merchant ID prefix. Huh. So aa another thing that we have just so we had done one mistake that we had given HDFC that uh we had given HDFC that write that when they are onboarding merchants they could decide the merchant ID on our system. Not a good idea because generally what will happen is if they try to replicate a merchant ID which is already existing in our system it would clash but that was already a mistake that was done but now we have included this tenant merchant ID prefix what it does is we uh so if now you see merchant account also there's a column tenant what is the identifier of the tenant for that merchant and what is just pay's merchant ID they are two different so what we have done is if say uh HDFC is onboarding a merchant say 1 23 we will create a just pay merchant ID HDFC_123 so this uh tenant merchant ID prefix is for that to identify just pay's merchant ID based on the ident that the tenant is getting. So here we will onboard a tenant. Now there's a table for tenant info. What we will do here is we will map uh the different endpoints or the host that is possible for this tenant to have. So if you see another Yeah. knew it. So just see forc sure. So see this HDFC we have onboarded HDFC. First we'll create an entry in tenant account when we onboard a tenant. Then what we will do is we will use their uh that identifier here as the tenant account ID. We will say what is the tenant name and what are the possible hosts that we that this particular tenant can have. So like HDFC has two hosts uh smart gateway.hdfc.com and dashboard dashboard they have a separate host.
So uh okay uh there are services currently being used like which service can call which host or that we have not yet implemented.
Yeah. So only dashboard is using that and we are internally using whenever we are calling any other internal service that's about it otherwise we don't call it. So if uh for example right if we are like let's say dashboard is calling us right then they will fetch the host from this uh this table that okay for oiler give me the host uh with that tenant id
sure
so similarly they work
h so just to uh add okay how are we identifying which merchant belongs to which tenant uh when we get a request envoy is going to add x tenant host at the header where they will identify what is the host that we are getting this request from so assume assuming that it's a hdf merchant so what will it do x tenant host it will pass smartgate hdf.com now when this request comes to oiler oiler fetches this extendant host uh tries looks up in this tenant info tries to identify this host belongs to which uh which tenant and that is and now if you see merchant account also we have started mapping this merchant belongs to which tenant so in merchant ID also now there's a new column tenant so what it'll do is it will identify the tenant from here so now I know that this this merchant now there's a validation also so if we identify that this merchant belongs to hdfc tenant then we will also validate if this request is coming from apiaspin we will reject so that is also Uh so what we will do is we will see where the host we will identify the tenant and then we will go ahead in merchant account and see which tenant this merchant is mapped to. So if the merchant is mapped to HDFC and the request is also coming from smart gateway we will allow but if the merchant is mapped to uh just pay and the request is coming from smart gateway we will reject. So that validation we have and that is uh one of the checks that probably we will also have to start doing that in case any any changes that are coming that are you know introducing a new endpoint or redirect uh changes where we so currently also if you open payment links you are redirected to the payment page. So all those changes where you're you know touching the endpoint where we are redirecting to the merchant should support all tenants. It should not be that you test it for just pay but it it can break for HDFC. So that should not happen. So this is one check that we have. We identify the tenant from the host the X tenant host and then we I think now we populate our logs also with tenant name that is there.
Yes or we'll give it tenant ID
uh but I think we will do that change to make it to name because tenant ID is
we already
yeah it's already there it's already there I mean in txs and other repos so you'll you eventually you'll start seeing tenant name coming up in all the logs we have we have started populating that uh internal calls so we are passing extended host to internal calls also right so any internal so on say we got the request to oiler is internally calling any other service there also they'll start passing extended host they have already they already pass So this is how we are identifying a tenant. Now what uh and okay so one thing is tenants may almost I think what are the things that we have separated out payment page endpoint is separate uh oiler API endpoints are separate dashboard endpoints are separate uh payment page branding is separate. So if you see backend maintains a lot of backend pages right where they we have the loader and all. So if you see different uh tenants will have their own loader. So HDSC would have its own loader page uh back end is also maintaining front end is maintaining a separate branding altogether. So that way back end pages are also separate for separate tenants
and this URL shortener is also there.
Oh yeah.
Uh so basically like in all of the paymentings or wherever like we have this URL shortener feature available right so in that also we have this uh tenant host also. So for SGFC you will not see that. So okay if you generally see it starts with just api.jp.in/ r/ something right which is like uh a shortened version of that but in case of uh this one in case of our tenants you will not see that justpega uh domain you'll see again that smart gateway something so at this point we haven't given a separate domain to sdfc for that tenant but the requirements can come up so I mean uh we have the support for it so we need to test that also So every time we are testing any feature which has a modification with respect to like pankur said right with respect to any endpoints which are touching uh any URLs which may further go down the line to any of the merchant facing things or even services which are merchant facing right I mean let's say you are calling token service which internally goes to cards and there's some tenant logic maybe there which will be getting some endpoint we need to ensure the testing for that also.
So one more stage I'm not sure if it will directly concern you. So right now for any just pay merchants we are doing the tokenization right we are calling the network we are generating the token. This may not be the case for other tenants also. So for HDFC for example HDFC has its own token provider. So what we do is we internally call VMmo. Vimmo is the one who will generate the tokens. We don't generate tokens directly for HDFC till now. So that could also be so maybe any token tokenization related changes you will have to see if it's working for me as a token requester versus it's working for tenant who has some other token request. So these kind of changes. So basically what we are trying to say is there could be such many such changes that can come up. Say for example for HDFC we will also probably stop showing just pay declined as a status because again just pay right if you don't want merchants to know just pay you cannot even have that in the status. So there's one change that Krishna will probably push in sometime where we will have just pay declined removed for uh different tenants. So the idea is there could be very custom changes being made for different tenants. How do you ensure that any change that is going you know it's working fine for judgment merchants but how do you how will you ensure that it's working fine for other tenants because you don't know what are the custom changes that are done right so the idea is probably in this you have to automate that if you're running a test suit on just pay merchants maybe run it for one of the other tenants also how will you okay how do you run it for some other tenant what you do is you have a merchant ID all you have to do is you in merchant account go and map that merchant against an HDFC tenant I think right now Paul Alex is mapped to HDFC so whatever testing you are doing say for Azaring who is a just pay merchant you can do that same testing for Paul Alex and you can see if it is working fine then probably you can be assured that your changes have not broken anything existing for uh HDFC tenant maybe tomorrow if HSBC comes you will have to replicate that same for uh HSBC tenants also so yeah that is uh huh now this is what is currently there but we are planning a lot of further changes uh in tenant because right now also you if you see it's not isolated right it's going in the same DB uh everything is same. It's just that on a high level you know that this merchant belongs to this tenant but there's a very high possibility that tomorrow uh okay so most tenants who come to just they have this uh expectation that you will be logical like you will be separated in the sense my data nobody will be able to see my data or that co-mingling of data with other tenants will not be possible so for that only what Kalan was saying right we are doing this uh change where we will have separate database schemas also for different tenants That is one change radius we will have the same stream but we will
keys like so like all the mer red keys will have the as just by colum colon or something unless they have to column all this keys
we will we are doing the changes so you that's what I'm saying right now you uh right now the visibility part we have sorted that how do you identify the tenant how do you ensure that the tenant is coming from the right hooks but now we have to go to the system part we are doing those changes you'll see a lot of changes coming where we are trying to isolate tenants in internally in our systems also that they should be isolated. Uh the and not just me or like not just oil different products will be doing the changes SDK will be doing the changes dashboard will be doing the changes uh in fact even data will be doing the changes where they'll have separate click house tables for different hello she's on a call Basically the current automation you're running for this QSO could run for Paul Alex also
huh
like all the credentials have to be
the host one we might have to change
yeah so maybe one thing we can do Rahul not at the very moment right we can create a dummy tenant for our testing also I mean how we had like dummy merchant Right. We can get a endpoint uh I mean it will take some time but yeah we can get a dummy endpoint for our sandbox and create a tenant with respect to that. So that okay for now it's fine right we can just test for SDFC and just pay and it works but let's say down the line we have three three tenants more right then it will take like just to test one feature it will take like four same testings
but for different tenants there would be different kind of functions right so
yeah but no but more or less if uh you know right if uh see that dummy tenant will also have some config so if you know your flow is touching that config then we need to enable and disable it like how it is for just pay right I mean if it's any config how do it is we generally okay let's make it or something
sorry
not internal config like is like this token broader is using some some other token provider
so a test tenant and you're and it could be using some other Right. But okay, for now um I totally agree with you. But uh the thing is with the one tenants it's it's fine to just go to SDFC have a dummy merchant there and test it with that one. But how do we ensure like when there are five tenants down the line we cannot rely on this testing method then we have to see if you are testing token we know like in general we know right okay uh if you classify it you let's not consider SDFC and just pay what do we know? We know we have our own token. providers and then we have some other token providers. What is the other web? So we can test accordingly. I mean how the same thing but on the test ids.
So basically I suppose in the future there are like four tenants
then u which you are proposing right? Creating a separate tenant just for uh testing purposes.
Testing purpose. Yeah. See whatever said is like the best way to do it. I mean you go to every tenant and do the testing for themsel but then for now No, it's one it's okay. Two is also fine. But when you have four tenants and for one PR, you'll have to test five successful scenarios for I mean four tenant and one just pay. So total five of them. So you'll have to test one single flow five times. That may get tedious down the line.
But how will you create a new tenant? Because you'll have to have a separate host also, right?
Yeah, we can get it pung from Sari. I mean an S2, an S4 or something.
Yeah, I was just saying if it
validate but I'm thinking uh but uh that will not solve your purpose right maybe like I'm thinking could it be a possibility that you have tested it for say your host but there's a change that probably broke only one specific tenant if that is the case then you will not be able to identify this right
no but then we have to it's not blind testing okay any changes come up just test on that uh that test tenant it needs to be like counterintuitive right if you're making changes with respect to some hosts and everything then you need to go and verify every host every tenant but if it's something like okay you are adding extra param somewhere I mean which is again a big a big change but yeah let's say you are modifying some internal things right or adding some extra fields yeah error code error codes you are sending more error codes or less of them right something like that then maybe you can just directly do it because it direct it does not directly affect your tenants it's not
take a judgment call
huh that's what right you need to make a decision on that
but if you just redirect ing how why will it impact
as there were two I'll give you example of two changes where actually it was working for just pay but it broke for HDFC so okay one of the changes was uh you we have done different loader okay backend loaders for different uh merchants different tenants sorry so there was one change that was pushed by one of the devs he was making changes in the just loader but what I'm not sure exactly what change did he do but maybe the order in which maybe he he did some changes but what happened is even for HD CD started swinging just below that
was for a A change by swarn but it got affected to so this is one example then recently there was one example where u okay so payment uh payment page gave us this uh requirement where what they wanted right now if you see when you click on payment link we give just uh backends link and that is internally redirected to the payment page a requirement was there that do not give express checkout link directly give payment page link Again what he did he blindly just gave just pick a link. So now what was happening is any HDFC merchant was trying to load the payment link uh it was opening with API just payin and because we have a validation that just HDFC tenants cannot use API just paypin their transactions were not even getting but the payment page was not loading so order was stuck in another example of why uh how a change uh you you think you're doing it for just pay because maybe the devs also don't have context of the tenants that well so they just blindly copy paste the URL because that's what we have been doing till now. API was just there just copy the URL and go ahead with it. But now that copy pasting of URL will not work. So these kind of changes can impact other tenants. Uh then I there there was one example for dashboard which because of which this whole multi-endency thing started. Dashboard for it F1 merchant wanted to uh trigger KYC emails. Uh now again they they just blindly decided that any F1 merchant will get this email. They forgot that HDFC merchants being onboarded are also tagged as an F1 merchant because they're small merchants. You you decide F1 F2 based on the size. So if you are onboarding some small merchants even in HDFC you are branding them as F1. Why? Because there are some features very specific to F1 that you want to give to them also. Now when they said triggered to every F1 merchant it got triggered to just pay F1 merchants and HDFC F1 merchant which was not required because HDFC is the one who's onboarding their merchants. We never directly mail them. So then just pay emails complete your KYC and many merchants did that also and that became a reputation problem because it felt like just pay is asking data uh just pay poaching uh SDFC's merchants. So these kind of issues can happen where you were intending a change to work for one merchant but or one tenant but it can uh you unknowingly have impacted the working in other tenants. So these three I remember and because of which I think we have to at least and that's what I was telling devs also that in local testing also you have to test your changes for multiple tenants. You cannot just say that you have tested it for just pay that means it will work.
So These kind of changes can happen because of and now too I think this is still now what has happened but now when we have different logical separations more such issues can come where you have to be sure that your changes are not impacting uh other change other tenants because now if you're doing any changes that are directly touching DB you have to ensure that whatever changes Kalyan and Hasha have done to store it in separate logical separations you're working on top of it so these you do not you know I don't so they will pass that change of you know the passing the schema So you have to ensure that every dev others do it. They should not mess that up. So these kind of things can happen
since you're moving everything to Q automation. Now
so I think this this issue which happened for PP right that we can test in Q automation.
Uh like whether that call is failing or not for that particular time.
But in QA automation do you actually see if this payment like if a payment link is getting generated do you actually also see if the payment link is loading properly?
Yeah that we can check the pages mean like logo is coming or which tenant logo like that we can test it
logo also we can
loader we already discussed
for keywords in HTML is it possible like just keyword
yeah yeah yeah
whenever some guys load and we search that we can test this case
if it's a HTML but uh that will give us an case scenario for a loader
where just logo comes up
ah that also we can test like okay like if I'm testing for HTFC like I know it what is the logo like then I can able to validate okay if I'm testing HTF so I need obviously like HTF load that is also possible
cool and the PP link which generates so the domain will also be different in that right so we can maybe run automation that we don't have to even hit that link
we can just check whether uh just coming in that
I'm not sure how we can do this
this is probably not directly on us right now uh
some dashboard
this will they are they will handle in their automation but you will have to ensure that any uh application level changes probably the changes that we are doing right now say uh once we have different scheas and all we will also have to include those like the we are storing it in proper schema these kind of changes also you have to include in uh the test cases because once you start storing it in different schema it should you should ensure that it's always happening maybe something on that sort Okay. Now currently do anything from DB not a
for sync and all we used to take and detail ID.
We have a blackbox like API test. So like this connect to our uh um SPD. So like maybe blackbox can we can ask blackbox to handle like okay if I'm
testing on which tenant or so based on that maybe we can configure maybe
it's actually part of the data inside it like in this like we have an object there where we store the internet and and train will have lag also if you want to go there
uh okay but I'm just thinking you still want to ensure right that you are storing the data correctly in the correct intended schema or you thinking once you do that change it will always be I'm just thinking can the dev go ahead and change something which will stop you from storing it in the correct schema or the correct partition can it happen
can we run a script instead Yeah, his changes he'll test. I'm thinking nobody should then go on top you know do anything on his changes because he will ensure that it's being stored in the correct schema but after that everybody will have to adhere to it. Nobody should change something that can you know uh interfere with the way you are storing data for different tenants.
Anybody using other library like this like they can't manually do anything it's just place like unless we change that logic.
Huh that logic I mean not be changed and then enter all all even merchant account you won't find it if you're the closing is changed you won't even find a merchant account for that
sure okay so you're saying this once your account don't need to step
it's like your won't work like
unless you have the same merc sandbox We can do it
every time you do a testing you want to check.
Look before just before release we can at least do this test whether I you can just check if you've tested it for say h and just see which schema it is getting stored in this change is not yet live once it's done we'll let you know and after that you can just start whatever you test for a tenant just see where it is getting stored. Yeah we have any doubts around what like why we need talent or something of that sort.
Uh like is any uh future plan like we are planning different uh features enabling tenant or like we may have some feature but we are not going to give different tenant those feature like we have planned anything or
can happen can happen so a lot of times we may have extra features which we don't want to give to HDFC like for example uh okay I'm just thinking which feature right now we would have a lot of features which will not this can happen so Maybe right now just we are building a feature for say for split settlement for example this is a feature that just pay merchants are using but unless there's a commercial agreement for HDFC tenant we may not want to give them that feature can happen or we can build a very specific feature for HDFC but that we can open for just pay merchants also but can happen vice versa also
then in this case like we need to test with all the maybe like what are the tenant we are onboarding right then we need to test in all the tenant testings
that are specific start suddenly working.
So right now maybe like if what Danchi told like maybe like we can take any one
uh so one tenant like so we can test for those all the what just pay is working the same way like we can test one testing tenant even though if you are onboarding multiple tenants right so there will be no use case which I'm seeing right now for normal testing.
Sure. Uh okay. So you're saying maybe you are still seeing a use case of uh whether testing
uh if there is any difference we can test test but still we are going to test same thing with different tenants right. So again if some new tenant is coming same testing we are going to happen in uh different tenants also.
So maybe let's do one thing right for the time being till SDFC is there maybe we can proceed with just just pay SDC testing but if later comes on then we'll decide based on what all features we have and what all differences we have HSBC to go live as a tenant.
Oh okay. So uh I mean so my idea was key why to have a test merchant is I mean it's kind of like if you think of it like key we have this aer I mean test versus some big basket or something right we have the test ID where it it is very much possible key some feature will not be enabled for that test merchant but may be enabled for some of that live merchants. It will be a similar scenario over here also a feature may or may not be u yeah active for that test tenant but we can make it active if we know the change is touching something for token let's take the same example if we know that change is taking for the same token then maybe we can configure it to use only webmo or something like that got it So you have to figure out we will have to figure out because uh I know HSBC is also going to come I don't know future there are plans for others figure out a way to handle this because you you cannot just keep on adding one more test case every time you're testing it you have to automate this
every feature you have to do it four five test cases for the same uh check
but right now like uh we have all the testing credentials like we are storing just pay merchet ID like just Okay. Uh in some but the same thing we need to add it in like HDFC configur
just sorry uh just to check that. So how do we decide as of now that we have to go with web or have to decide on our own for the token provider.
Yeah they are also having a tenant based logic. So they have decided that the merchant belongs to HSBC HDFC as a tenant go to webmo do not call network directly.
So it's more or less hardcoded is it or there is some config cut. or something like that.
I think right now it's hardcoded as and when maybe new tenants will come they will also start making it config because HSBC may we have not yet decided how how this tokenization will work
right so if u the ones that so I in the right approach it should be a service config or something like that right so given that we have that they can write two to three automated test cases right which will run for both of the tenants
yeah we can do that
with that feature on and off
you are very uh you are just is imagining this as a solute feature right I'm thinking there could be a lot of small small features which is based on like hardcoded as a tenant in the code there could be a scenario is what I'm thinking like right now this loader is also very specifically hardcoded right that if the model belongs to HDFC as a tenant you show this loader otherwise you show that load that is also not configurable
should it be yes but can you enforce it I don't know
so maybe see uh once HSBC comes up right uh I mean uh do we have a plan of removing these hardcoded things to to make them or do we don't have any plans in the
uh we want to okay so I think loaded they are going to make it configurable
uh but uh can it be like I'm not sure if they're doing it for everything
okay
want to if HSBC comes up and we keep on having hardcoded things then it gets it will get difficult to manage things right in the code also let alone testing
true
so if we plan to remove that then it will solve here also but if we don't plan to remove as an in near future then maybe for the time being they'll have to test with all the tenants that that we have
sure and I don't know if you can enforce people from not hard coding in the code itself that we'll check I'll check that event once
yeah I just want to understand like what's the harm in creating a merchant for uh basically for every tenant which you have and doing a test
we can do that it's just that it'll increase your test cases by that number of tenants that you onboard. So right now HTC same test case success test case you have to do it for HSP merger you have to do this for HTC tomorrow if HSBC comes you have to do the same test case
but everything is automated then it can it run in parallel
automation is fine but say a new feature comes if you're testing a new feature right now you're just testing it for say HDS just merchant and you saying it's good to go new feature then also you have to start testing whether if it this feature is not intended to work for HDFC you have to then test for HDFC and ensure that it's not working if this feature is needed in BC you have to test an HSBC and see if it's working. So that will just increase your workload is what I'm worried about.
But look anyway we have to do that right even if it's a new create a new tenant.
I'm just but say for example there are three tenants is still manageable. What if there are say four five seven eight tenants that come up in the future hopefully then how will you handle it? Would you still want to do it manually?
But there Rahul the issue will come up for the new features. And we have releases every like other day right every alternate day then it will get difficult because one PR will request seven set of happy and failure test cases I mean assuming seven tenants are there including just pay
you understand right there will be 14 tests one for success one for failure
understood but uh is it uh is it the time constraint that it will run for a lot of time
see we don't have if you guys think it is doable go ahead my only because we have this so releases with that pace Will it be even possible for you to test it for different tenants is the question.
Yeah, I'm just thinking so automation can it run parallel for
I mean yeah it can be configured to run parallel it's not a big deal for automation test suit right but that would be for existing features right I mean that is more or less ensuring that backward compatibility is there but what about the new features
we create a new tenant there's still some possibility that uh we might miss something
it's better to run it for everyone for now at least.
No. So if you are okay with the time that it will require for a new feature, not an old one, but for a new feature to test for all the tenants, then we are good.
But how frequently are we doing new features?
That's also a question
that's I mean see you will not realize until unless what the changes right the changes will be see we have now merchant level config and tenant only once that tenant level config comes up right.
Yeah.
Uh then it will solely depend on which tenant you're testing for
right. So you'll have to go and test for every single tenant. Let's say search ads is enabled for that tenant and but he hasn't. So like taking the example of search right let's say he has enabled it for a merchant but he has disabled for all the other merchants. So you'll have to go and test for that a merchant and see the search should work and test for BC or D anyone to check that it does not work. Then coming back to the another tenant you'll have to do the same thing. So my idea was I my only constraint was key at this point it's totally fine we can and do it for two three maybe HSBC can also work maybe four up till four but then going forward when tenant will have all the controls over everything then it will get tiresome for the new features not the old one old one is fine automation can run in parallel you'll get the like it take 30 minute now it will take 30 minutes then also
but for the new features let's do something right now there are two we'll see how much of an effort it is at least for two and if you guys feel that it's too much of effort or it's too time we'll figure out works. Let's let's start with HDFC if you guys because anyways you have to do it for one more tenant. Let that be HDFC for now. Let's say in May or June HSBC comes and if now you feel that way is becoming too much for me to handle then we'll have to figure out again we'll discuss on that works. Any other doubts? So I'll give you a list of uh one more uh list as in what are the you know system level changes that we are planning in oiler for tenants have a look at so not yet live but that that is the changes that we are planning so maybe all of these all of the components of oiler will from radius from data uh database to everything will get impacted so how will we handle it these kind of changes will also keep coming in so we'll have to figure out maybe how do we test that so I'll give you that list as it'll slowly start coming in
sure okay Thank you guys.
Uh Raul group,
huh?
Yeah.
Uh can we create mean uh meeting for next week like how can we add these things in in automation to plan it?
Yes. Yes.
So we can plan for something in our automation to achieve these uh things.
Uh I'll create a meeting. We'll discuss.
Sure. Okay. Thank you.
Thank you. Bye. trying if it gets to our angle.
