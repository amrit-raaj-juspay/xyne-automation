# Payment Card Tokenization Guide

• **Tokenization Overview**: Explains how card details are now stored securely with card networks (Visa, MasterCard, RuPay) instead of merchant systems, following RBI guidelines to enhance payment security.

• **Implementation Flows**: Covers the complete tokenization process including service eligibility checks, consent management, token onboarding, and repeat transactions using stored card tokens.

• **Dual Tokenization**: Details the advanced dual tokenization feature where cards can be tokenized at both network level and issuer level (like HDFC), providing additional transaction routing options and fallback mechanisms.

So mostly everyone knows about tokenization right like If when you're doing any card transaction like you people have noticed uh like some consent like you want to store or something you might have seen that so what this tokenization means before we used to store customer card details in the jp DB so we used to encode those card details and we used to store in our DB but because of the RBI guidance so no one should store the card details other than the network like network in a sense card brands like either Visa or Master or Rupe. So these are the card brands. So these we will call as networks. So uh because of that RBI guidelines we have to store the card details only with the network to network site. So what we are doing in tokenization is uh So first um when we initiate any transaction call so we will give the like card transaction. So we will give the card number right. So in card number uh we will take card bin is the four first four digits of first four digits of card number we will call as card bin. So before um going to transaction call itself uh based on the that card digits like card bin uh we will call one call like service eligibility call will be there.
So what the service eligibility will tell is whether the our card bin is eligible for tokenization or not. So if our card bin is eligible for tokenization then only uh in the /tx call we will see the consent URL. So usually for card transaction we will see past URL right when uh so for to see the consent uh consent URL we will have one more field we need to pass one save to occur as true. So if um save to local as true and card is eligible like then it will go for service eligibility call and uh it will check the card bin. So if card bin is eligible then service eligibility call will give 200 and we will see the consent URL in the /txs call that is the first check of tokenization. If cardbin itself is not eligible for tokenization we will we won't see the consent we will see the past sometimes. you may get like okay I'm passing this to the true but I'm still faced concern this is the reason so you can go to the logs with that already uh you can see in the logs service eligibility call there you can see the uh error message so card bin is not eligible you can show that
I will show that also Excellent. If people able to see my screen, right? Okay, I'll just create one more question. So here we are getting the consent page and because we are passing the service here save to locker as true we can see the service eligibility call and log. So this is the service eligibility call that you can see uh whether the card is eligible for tokenization or not. If it is here it is eligible for tokenization. That's why you got the consent page here. If you're not passing the save to local as true you won't get the consent itself. You'll get to start huh you're getting So this constraint we get for tokenization.
So when we uh when the merchant is enabled for the tokenization and when we pass the save to localiz and there will be one cut over. So if the cut over is enabled if we are not passing the for that particular merchant if you're not passing the save to local as true also we'll get the consent page. Okay.
If that cut over is enabled they have to There will be one cut there will be one document I'll share that document in the Q channel. So there you will see all the configs which are required to support the tokenization. If you enable that you can see the flow. So first this one so first check is service eligibility check. So if it is eligible then we will get the consent page. So next what you will do is uh customer will go through the like normal transaction process and we will do the transaction. So once the transaction got successful then only uh we will call the one call will be there tokenization / add that call is uh used for um token onboarding like when the uh we are storing the token in the network side wait I'll show uh does anyone have HTFC card here you have can you share Okay. Meanwhile, I will show with this transaction. My card won't support because What does it say?
When the merchant is enabled for the there will be some service conflict. That's all. So this is the consent page like we are asking the customer whether you uh we will store your card or not. So if my uh customer has clicked on this secure and pay then we that means he has given consent to proceed with tokenization token on boarding. Master or visa?
I want visa.
I think it got to I think she enabled for dual tokenization. Shishank will tell dual tokenization. I will just tell one block shish is there any merchant is disabled for dual tokenization or okay I will try first
I will tell I will tell just now I started Is there any production reference ID there for PTM V2 in PTM V2 in test? Shishank. Is there any G reference ID for pay or PM2 mandate? Just one second. I'll send broad_mandate.
Oh, one second. But pay you is it share it? One second. Wait. I'm just checking it out. pay you fraud. I'm paying you the make itself. Please. Come on here. So for this the transaction got successful and logs we can see. So if the card is uh card got tokenized and it got successful in order status. You can see like this uh below the card details you can see the token block token details using token and all the token details means it got success it got stored in the network. So sometimes uh
I think this also
no they have made some dual tokenization thing that shank will That is they have now. So before we have only tokenization now they have integrated dual tokenization in the sense we will store the card in the issuer and network set.
Both are token. Here the cut over for this merchant is not enabled for dual tokenization. We are seeing the token blocks but here whatever the network got tokenized right only that block we are seeing. If the cut over is enabled in the tokens block we'll see issuer token as well.
Okay. So as you're saying we'll get one issuer token one token.
Correct. Yeah that is the dual tokenization. token.
See this token blocks gives you the information from which it got like uh the current one right which is from which it got tokenized like here it is a single tokenization right so is it like network side tokenization block see there are priority logic from order status end wherein it will show like first would be whether issuer side tokenization should happen or network side tokenization. So this blocks will give you that cut over like which is the prior logic selected.
Your voice is very feeble. Nagendra can't able to hear you properly.
I'm asking like just two blocks, right?
Huh?
Mute.
Just two block, right? I need to know which side of that one is insure. Which side of one is? You are saying this is not enabled.
Logic then. data should contain only one block.
No, no, it will contain two blocks. So that is what the token block and block tokens block of both network and issuer side tokens. But this token block it is there from the beginning. This is the token single tokenization block that we used to see it right for tokenization flow. This is the block. This isization please. Okay. Can you enable uh dual tokenization and show me the difference? Yeah, describe.
Same thing if you do it for mandate just pay right you will be seeing two token blocks. I'll share my screen one second.
Wait shank you can tell that after this complete for single token
completed started. Once it is completed she will take she will show the other tokenization. Okay. So, uh if it got tokenized then you can see the token details in the order status. Before uh when the card is like uh it is not tokenized then we used to go to logs and we need to we need to see the token/ add call and we need to see the reason why it hasn't tokenized.
Now uh we made changes in order status. So if that card is not tokenized als So the reason you can see here itself tokeniz will be some field called like tokenization failure reason and you can see the reason also in the order statated call itself. So for tokenization what call you need to see key like in logs there will be
now this card I will I can do for test card. Okay. tokenization they didn't get the token from those details will be
so this is the network like what we are making to store our card in network end you can see here like all the details are for in network. This is the call. So like when so this is the basic case you have to see when you're doing a token onboarding. You need to see in the logs tokenization add call is successful or not. If it is successfully it will get tokenized and you can see the token details in the order status call itself and uh there will be one more call
which is tokenization such
uh when uh that that case is when you are doing the tokenization and but Now you can get so before there will they used to have some caching issue. So when you are not clear the cash in the browser we shouldn't show the consent also and um it will directly redirect into the payment page and that's why no I think they have fixed that issue.
Yeah. So when the transaction so first main check is so transaction has to be successful when it is successful only it will go to the tokenization shortcut. So this is the so this is the one case. Like you can check whether the card is got tokenized or not like in order status only and so before um after card got tokenized like card got stored at network end. Uh so what is the point of storing the card? Can someone tell why we need to store the card?
What we need to store the card why we required the tokenization why we need to do Yeah.
That's what I told first only you missed the class.
So why we need um Okay.
Okay. So you used to do the any Amazon transaction and all right. So in Amazon or any you know uh shopping app. So first you used to enter all the card details and next time onwards you can just see your card like four digits and just expiry here and you just need to enter the CV and the transaction. So that is nothing but this flow that is the repeat flow. So means that
so what it is showing is that is like table and we give that file transaction for how that is another class.
Okay. So, so that like um so why we need to store is next time onwards we we don't need to enter the all the card details again and like all the expire year and everything. So just we need to enter the CV and we need to do the transaction like repeat transactions
just show So before we used to store it uh just pay end but after the RBI guidelines no one should store the car details other than networks that's why the tokenization came into picture.
So there is a difference right so if some cards will support tokenization and some cards will not
so it will go to normal 3DS flow these cards will get stored or no those won't store
but it will perform a normal transaction
just normal transaction system onwards you have to enter all the card details Why some cards not supported?
That is card those card um pins are not supported. Why means what?
For international cards from uh so this is the list store card called sim if you done save to locker will it going to where it will going to save
it will it will be stored at network end
so save to locker command whatever we are sending is a true so it will going to store the card details in the network.
Yes. Yes.
Okay. So uh this card is the list stored card. It will show like means it will show the all the stored card details with that customer. So here the card got stored at network end. So you can see um here there will be one field called provider category. So Before we used to have uh we used to store the cars at just pay end also. So at that time provider category should be like container and it will be just it. Now if you want to like uh you know we confirm whether it got tokenized at the network end or now we have another tokenization called issuer tokenization. Whether it got tokenized at network end or issuer end. You can see based on this provider category field. If it is a network means it got tokenized at the network end and also you can see all the you know card details card reference the reference ID which we stored um for that card and the card detail token this card token we will use for uh repeat token transactions if you want to do any repeat token transaction for that particular uh card you need to use this card token I will show that also what is this card reference and card Um uh so card difference uh so uh multiple customers uh so different so one card is there so my card is there so I can do the transaction uh I I can do the transaction with my card and you also can do
so if you do the transaction with my card uh you done like Joshita did one transaction and sim also did so for Joshita the card difference will be for that car Card number card difference will be different for SIM also the card difference will be different but card fingerprint will be same because that is the same card that is the difference between card reference and card fingerprint same
um so we will have some different cards right we will have uh so there is one card so with that one card multiple people we can use the same card right but the card will be same. So multiple when multiple people done the transaction like uh the same card you done the transaction and someone um like Jos or someone did the transaction. So if the card got token then then also it will get tokenized. So then uh it will it will also stored at the network end when you did the transaction and Josh did the transaction both time uh tokenization will got successful and uh like differently the card got stored then you will get the different card differences. So Josha will get one card difference and you will get one card difference but the here the card is same card. So the card fingerprint will be same there that card fingerprint won't change. Got
so for one card how many different generated like every time you are adding card transaction so the token will be same or every time it will change.
It will change.
Is is there any uh limit for this like uh
no it will be limit no limited time means for car token car token will be uh valid up to 15 minutes after 15 minutes if you want to use this car token you need to generate a new token by using this list token
you can generate a number of times
how many times token
uh I think up to 100 like I'm not sure bas on the limit as of now before I my my card limit got exceeded now I think uh it's it is again supporting this one we can do when we delete the card we can do like up to 100 before it is up to 100 or or something
siman actually what is the card fingerprint sorry I don't know that
so card fingerprint is the like uh unique identifier of your card.
Yeah. So, one card will have same fingerprint. It's like a unique uh number.
Okay.
Yeah.
Okay. I will show one any queries
that card fingerprint will be generated from uh whose ID is it from network side or we'll be generating or all the cards will be having that unique fingerprint. So how we will get to know this is my unique card fingerprint.
So where it is getting tokenized at network and only right. So network only we are all our card details. So network will have the details. So for same card if though the customer is different customer the card fingerprint will be same.
No that I got it. I mean I I just
network only will generate
that card fingerprint we will be generating in the network. S
yeah we won't generate network only generate and give to just and we will show that we will show that.
Okay.
Yes. And that is the card bin four digits like six digits
three six only 4 1 6 0 2 1 how many digits
token see so we have two like this Inside the token block uh we have one card as that is token bin. Outside that we have one more thing card as that is card bin. So token bin means so when we store the you know card network and there we will generate one card token like um so it will show us the card token instead of card number it will show the card uh token. So this is the uh bin of that card token. So cards inside the blocker Both are correct only. So inside that one is the token uh number
PK and what that is temporary card token. So
yeah so um for that card number uh we will store so we will store the card token we won't show the card number to anyone right so instead of that we can generate one card token that we will show to the here So that see here card ASN is the that token bin. Okay. So token bin we will show in nine digits card. So bas based of that you can see the difference also. So card bin will be six digits we will show and token will will be nine digits will show and you can see here which is the provider here. Uh provider is visa and all the details you can show here. See here. Okay. And here the card reference will be same like uh this is the unique number of that card with that customer and card token uh this card token will be valid up to. If you want to use reuse it you need to again hit this store card and you need to generate a new one. If you want to do repeat token transaction whenever
yeah
the token is support files what it defines
that one parameter is there no provider gateway down that down that block I'll be having a tokenized support as false
huh
yeah
it got already tokenized so if you want to tokenize this card again you can't tokenize because it's already stored that's why here it is showing us tokenize support as false
okay for customer.
Yeah, that's why it is showing as false here.
Any more queries?
We can I will show that also here up to okay I'll show uh
what is the difference between this token and
which token is that token that Josha will tell because she only work on okay I will show the Repeat token transaction now.
Checking this token block means
no transaction and then after
after that if you want to do the token repeat you can do or if you want to proceed with any any transaction you can do. like the save. So using that last you can use that's what
yeah I'll show the repeat also now That is in different class.
No. That is not tokenization.
My card only.
Okay. So repeat. Wait. First I will do the transaction. I get Yes. Okay. So um so this is the repeat token transaction. So here what we are using is we are passing the car token param. So this car token value should be this one what we are got in the list store card and and here so in normal card transaction what we are passing all the card expire. card number everything we are passing but here if you can see we are not passing any expiry and card number anything instead of that we are just giving the card token and we are just um passing the card CVV and that's it everything else should be same and here we will get the um like everything will be same we'll get the view to pay start and we can proceed with the transaction we'll do I will open the order status for that one sec H uh for repeat also you'll get the token block and how you will get to know whether this transaction is repeat or token onboarding is how we'll get to know we don't tell Shankr and Josha won't tell others we can tell by seeing the order status we can tell uh we can able to tell uh whether it's a token on boarding or uh repeat There is simple difference H.
So how you identify uh whether it's a uh repeat token transaction or onboarding transaction by seeing the order status you can tell
the first transaction tokenization number is not there. It is simple very simple here only can see.
So how you will get to know by seeing the order status is a repeat token or token on boarding
number onboarding also it's not there. It won't show. H
using saved card means
but but that is not the actual using token.
So if you can see wait I will show the before. Hm. So this is the token on boarding status. So here you can see using token as false that means it's a
using it's also same but that that will comes under card details like card block right that is a card block field you can see if you whenever you want to crossverify like whether uh your token on repeat got successful or not you can check by using this field using token as stro uh true. If it is true then yeah you did one repeat token transaction and in logs what you can check is um so for uh token onboarding what we did we just uh stored our card we just added our card at the token end so we got the tokenization/ add call like we added the card for token repeat. What we did, we just use the uh no token uh by using the token we did the transaction means uh uh when we uh uh pass this token, we will go to the network side and we will fetch the card details from the network and we did the transaction we did the transaction successful. So token onboarding we use the add calls. So fetching in the sense we are just uh getting like we need to get right. So tokenization/get call is here. This is the network we are making tokenization/get for repeat transactions.
Uh so tokenization/ add call when we got after completing the transaction right. So can you guys can tell when this call will happen like when it might happen tokenization/get call after the tok transaction or before the transaction after initiating transaction. So we will just hit this call and we'll get the card like details based on the token and we will proceed with the transaction. H
what card details from network and we will make the transaction. So this is the repeat transaction till now. Is there any queries?
Having yes
that is new feature that we'll explain by Josh. She only tested that's a new feature that is okay
one by one she will tell after the small R value par also it's a payment um
it's also like unique ID like it's also like card uh fingerprint this we will use for offer transactions mostly in um why it came here in a sense like so how we will do the transactions offer transaction if you want to do any card transaction like how we will do offer transaction means any PMT right card or valid and all so if it is a card offer We'll use the power and there will be one um so now what we are doing in this repeat token transaction we are passing the car token and we are doing this thing and internally the token details we are fetching from the you know the network and we are doing transaction there will be one call tabb token transaction that means uh so here we are giving all the we are hard coding all the token details and we are checking this just a um hard calling call if it is a extra check for repeat token transactions I will show. So for this call what and all parameters you need uh so for this one here card number will be there right this is not the actual this will be the token number so you people saw right this token why it will be different token this card I card So this will be the token number. It's not and we have to pass in the card number and it will be the token expiry month expiry year CV will be same and uh okay this t value and all we will get in one call that is V4 card get call
h
what is cryptogram?
Cryptogram is same What is a unique number for the card network token?
Identify unique identifier. So, uh we have one more call called V4 card get. So for this request will be we need to pass the customer ID. I customer V4 card get to see that Token D proper token details and card reference you can get from this list store card. So in restore card it will just show the what card stored in that for that customer right so here in V4 card gate for that card reference it will give the detailed uh information of about that card and the customer so it will just give that um token request ID is a unique request ID which stored at the token and fingerprint you know and reference and this is the token details and it will show uh sometimes uh so um sometimes token may get expired that is rare case it's u that uh use case we are not able to see now so some that is different that is temporary card token what you are doing to do so this is the actual token means what is stored at network end so it will show the status of uh that uh network token and uh this first six will be uh these all details will be the token details like tok I told that similar to card number there will be token number also which is I think not this card number uh and so why it here it is showing card number null means uh there will be u so there will be use case so either it has to show only the token detail or the card detail so that's why here card number is null so because we are seeing uh here we are getting this uh token number right that's why here card number should be null. It shouldn't show the card number and it will just give the power of the card number and that's it. So whenever you need to do you want to do any token plus tab call you just need to hit this uh V4 card get call and here only you will get all information which you need to pass in token plus DAV call. Uh so what we need here just here and one more case why we will use this token press. Uh so tokenization now mostly supported by visa, master, rupe and everything but in sandbox if you want to test uh uh only visa will be supported in sandbox as of now like other brands also will support but cards in sandbox will only support for the visa. So in some case you want to check for master or um rupe whether like network uh tokenization is working fine or not. In that case what you can do is you can just onboard the rupees or master and the production you can just um so in production you can you will get the card will get stored right so with that card reference ID and customer ID you can get all the network details like the token details with the token totals uh in the sandbox you can do the repeat transaction with the tokens
that's it here only we forgot.
So if you want to perform like uh you just need to do one sanity on uh rupe or master in sandbox you can do this only token plus tv flow you just uh on do the onboard and production and um by using this v4 card get call you can get all the you know token details and with that details you can do just perform the token plus I will just show uh so here Card number is not actual the card number. It's a token number which you will get here. So here tv of t value you need to pass the cryptogram. It is nothing but the cryptogram value and you need to last. And this card last four digits you need to pass. You can get in the car details block.
That is also have like uh so t also it's also have 15 minutes of expiry and okay I now you just pass the t like cryptogram value here right and you initiated the transaction. If the transaction got failed maybe No, it will it will generate each time it will generate new value.
Wait, it will generate. See, you can see here. uh in here the values are changing. I can see here it's W1 right here it is a R r1 something you can see in between huh
what
huh I will share with you after this call you can check so this also will generate each time when you hit the you know v4 card get it will generate suppose uh you just taken all the details and you pasted in the token plus TAV call and you generated the initiated the transaction because of some reason it got failed. If you want to initiate the transaction if you again hit the with the same TAVV if you initiate the transaction it won't work again uh you have to call the you know card get and you need to take the new cryptogram like new TAV and you need to pass and you need to do the transaction each time you need to take the new T like cryptogram you need to do the transaction Okay, for this I'll just it it will be the normal call only. You'll get the P2P start and you can do the transaction and for TABV uh token plus TA call you can you won't see any you know using token as true and tokenization/get call in the logs because here we are like hard coding all the token details and we are making the transaction right so you won't get any tokenization/get call in the logs it will just go as a normal transaction that's it that's pretty much any queries till now Okay, understood.
That is a different one. So, we have one more thing called car/ tokenize. So, you won't get confused. Tokenization is different. Card/ tokenize is different. These are two different. So, card/ tokenize is what we are doing is we are storing card at our locker. Some temp locker will be there where We are storing this um by using the card/ token tokenize we are storing the card for only for 15 minutes we will store in our temp locker this one only I think few merchants will using no it will also give one token like I will show uh so this call you can try by using H
no it's not related to transaction I will show
yeah you'll get the consent so this card/ tokenize and tokenization are two different flows don't ever confuse with that that is a network based so car/ tokenizes we are so we can see here you can see uh we can I will just show now So here I pass the card numbers and all the card details I passed and I got one token. That means we are just by using the card/ tokenize call we are just storing the card details in one temp locker that will be valid till 15 minutes only the temp locker will be and by using this token also you can do the transaction. So by using this token if you do the transaction uh the transaction will be like repeat token like normal how you're passing the card token on this one and if here if you pass save to locker as true wait no by for the repeat token transaction we didn't get the consent page we got only pay start right so for this token Wait one concept you can tell okay I told you we'll get the consent but here though I'm passing the save to locker why I got only pay start instead of consent token
for card token we'll get the consent because it's not tokenized one right I just here in card/ tokenize uh I pass the card details and I got one token and with the token I told if we use this token and and I have passed say to loc as true also but still I'm getting to pay start only
not not same card so there is a use case rate I am using the same card and the same customer If I either change the customer with the same cut, it will work. Or if I change the card with the same customer, it will work.
You missed second case. Just you ask me to change the card, not customer.
I will change the customer only. It will be easy to change, right? Okay. H now we can see percentage by using this token also you can do the token onboarding and uh for this card/ token is here I'm passing the card numbers right you can also pass like the stored card token is nothing but the card token which we are getting here we can by using this also we can generate the token And with that token also we can perform the transaction. from different merchand issue. There is some issue now. But we will get the token by using the network token also. This is different one. It's that's why don't confuse this and tokenization flow. Some merchants are some merchants are still using the old merchants are still using this card search tokeniz for them. You will use this one.
Yeah, this is different.
Yeah, this is pretty much about to ganization.
Yeah. Yeah. Yeah.
Okay. We have one more call called delete card. So now we store the cards.
Yeah. If you want to delete the token also, we can do that also. For that we have V4 card delete.
That will explain by correct. Uh so So this call we can call like in a two we can do in a two ways. By here we can uh if you pass the card reference and customer ID and we can hit this call it will just delete the whole like card.
See here we are getting the this one right?
Yes. Yes, it will deleted network and it will call. So when if we call the V4, we have two calls. One is V4 card delete card delete and this is car delete. So this car delete by using this it just delete the card token. If this is nothing but this one Hm. It got deleted if you want. Uh so
it delete. Yeah, we can do by using this load card token like uh this card reference we can do. So with the this card delete it is deleted at our end like our just it got deleted but network end it still exists. If you want to delete at network end we have this V4 token. This card delete can just need to pass the card difference and Sorry. Okay. Okay. So we have two different calls for deleting the card. So one is uh card/delete and one more is V4 card delete. So in V4 card delete if you want to delete the particular token you just need to pass the card reference and customer ID and this Delete card. Delete card one. We need to pass the card token. So with that card token also you can delete the card. You cannot see. So in list card also you can't see we are not getting that deal uh details. And here also that's why I'm telling that's why we're not getting the details.
If we are tokenizing it network side right.
Yeah.
How do we deal it network side? Network said uh we can't delete.
Network said we can't
they won't delete. So so what's happening is we are tokenizing the card at network and network is giving the details token details set that we are storing in our store card uh DB our DB we are storing. So if you want to delete the token we can delete in our end but network end we can't delete because that things will be handled by network side only. So if you If you delete also it will be deleted at our end. So in our DB it will be deleted.
Uh so in card delete we will pass the card token. With that card token attempt token is there. So with that we can delete and card ref customer ID and card reference. HD Card token there will pass. Card difference in V4 for card delete will pass. That is the pretty much about customer single tokenization. Dual tokenization now will be explained by Shishen. Is there any queries still now in single tokenization?
No, it is like similar to tokenization only she can explain how itself
shishank he can
so what are the things that sim told right so most of you are clear on that right because based on that only uh dual tokenization would be there
yes okay uh so when you're doing a tokenization part right there like a few tables like that gets updated from our end. Before we go on to this, we'll see why this what is this dual tokenization why it is actually required. So we are having two concept one is like uh network and another one is like uh issuer and so what is network what is issuer like can anyone tell apart from um Jooshan Siman like from your understanding what could be a network. What could be the issuer?
Issuer is the card issuer.
H
and network in the sense that Visa, Mastercard whichever it is provided that is the network.
So correct. Uh so now the tokenization is like we are giving support for issuant that is like few of the issues are like HDFC, ICICI. So now HDFC had come telling us that they they'll support the tokenization flow from their end. So we are giving this support for them. So we are introducing this issue tokenization support for HDFC. So before to have it this network tokenization like for Visa, master, rupee and all right whatever the cards that we have those are like networks. So for those network side we used to do tokenization. Now for issue end we have this uh tokenization done. So that is why we have we'll be having two blocks in the order status like initially when Siman was explaining right we saw like two blocks one is like token block another one is like uh like tokens block. So when you're doing a dual tokenization two uh tokenization would happen like one would be from the network end another one from issue end. So
why we need is
that is the support we are giving for issuer like issure is okay like there are like few cuts before that moving on to that like these are like issuer cuts like uh that is there like for visa issuer the when we enable all these cuts right then the dual tokenization would be enabled so HDFC had come up saying that uh uh they're okay for tokenization flow. So just pay is providing the tokenization issue tokenization support. So that is why we have two blocks only HDFC supports or other
no as of now only HDFC is there HDFC Visa card. So here this is the merchant concern that you are seeing. Uh previously Nagendra you had asked right why what is this? token and what is this tokens? So whatever the token that you are seeing here this is like merchant side merchant consent like from where it is like getting tokenized this tokenize is like it it is getting tokenized from two end one is from network end another one is from issure end so when Simbran was explaining she told like uh whenever the card is getting tokenized there will be tokenization/ad call right so Here similarly when there when we are seeing two kinds of like network and issuer so here there are two locks that you'll be seeing one would be the / addard call for network end would be for issuant so these
I understood that but see you're saying that for that merchant issue tokenization is not enabled so we already displaying the network token why do we want to display another token block inside that network block again.
So what this this is like these blocks gives us the details like what are the from water and all end the card is get tokenized is it from network issuer both support is there or not this token block will tell us the support of tokenization.
Uh I understood that one. See there is already broken block and only for network token only there is one block is there right you are again g one more token block inside that again you're printing network token even though issuer tokenization is not enabled you're still uh displaying token block inside that network token is there
uh this is a order status uh rollout that they have given like you can't display only one uh field there and another field you can't introduce the new field uh field for dual tokenization Right. So when
I understood that one
see you not inserting what I'm saying. So for the merchant you are testing dual tokenization is not enabled.
Correct.
Okay then uh like previously which symbols show the order status.
Only this thing till here you
this block you won't be seeing because that
I understand that one but it is redundant data right twice showing same data token and token inside the token another token block with the same network is shown right.
Okay. Okay. Fine. I agree to that. So how do you differentiate an order status and uh let me uh tell us that this is a single token block and this is like dual tokenization support one then
difference for differentiation purpose it is adding them.
Huh? So so when you want to know right by seeing the order status you'll get to know So what and all support it's so when merch sim when she did a transaction for aert she got only till here that means that particular merchant and the card that she was using was valid only for single tokenization. So now whatever the block that you're seeing right with issuer and network that means this particular merchant and the card that I'm using is eligible for dual tokenization.
Okay but there is service configuration right to enable it and disable it. We could know by service configuration is enabled or not. So if service configuration is enabled only we should show this list right
but that won't work that much uh nagendra because uh when you are enabling a service config then in introducing only one field in order status and when you're disabling an order uh in a service config and you don't show that particular uh field say this tokens fail I don't Think that would work?
I think from merchant perspective merchant is not enabled for this dual tokenization is getting two to network token. How does merchant feel about this?
Merchant will get only one token. See dual token he would not see this order status right? He will see only these are from our end. No.
Yeah this is from our end. We are sending two block right. Token inside that block. One more block is there. Token block that
uh See this is like from our end we are uh having this dual part like tokenization and from network and initure and we're sending to merchant it will be one only we won't have two things like only when it is dual tokenization then we'll be having two see this table here right uh so this will be having card token from network end and card token from issuer current.
Okay.
So there will be two things. So when merchant is having this uh support then it's merchant will be also knowing these values right without merchant knowing these values how we will be able to send them then
we are sending this to merchant. Merchant won't be knowing these details right he will be only knowing what the card number is at the first point and the second point when he only send CV will pick the token and he'll send it right. doesn't need to know who is doing the topic.
So then that means that this is not required for too much and to know it right. This only the details that we are storing from our the support that uh issuer is providing we are having that support that's all we are we are going to use that support
is it reflected in dashboard like dual tokenization
in dashboard you can't see how we will be seeing single tokenization in dashboard you will be able to see no right similarly for dual tokenization you won't be able to say it in dashboard
then no use of holding these values right in order status even it is a dual tokenization or single tokenization
see this is like uh issuer is giving the support issue is giving this uh issue is telling that I'm okay to have uh I'm okay to give you this uh uh entry for tokenization uh so you can have a issue support as well so when network support tokenization fails we'll be using issure uh tokenization and do the transaction in that way it is advantage for the merchant right he won't lose anything
I understand it's advantages but
is he consuming this one that's why I'm asking is just you are sending two additional fields one field as token and another field as token
so he'll be consuming it so when we are sending a web book so webbook will have this token and tokens block both will be there
okay yeah
at at end of transaction we'll be sending merchants the web hooks right so when you're sending the order succeeded web hook to merchant that webbook will be having tokens and token block both it will be having so merchant will be consuming this one
okay
so clear on that like can I go ahead
yeah go ahead uh so uh as she was explaining there are like few tables like as part of single tokenization the entry would have happen. So this is like transaction detail table, transaction info table, store card table, there is a tokens table and enrolled PAN id. So these are the main DBs that gets uh updated when you do a tokenization flow. Like in transaction detail table what we do is like we'll have this token reference in the internal metadata and in card info table we'll be having this card reference number and then in store card table we'll be having the card uh card token and in token we'll be having that id of card token that is there from here this will be an id like first entry of token db and uh in the token we'll be getting an enrolled pan id this will be like an id of pan table so this is like main architecture like of tokenization flow like how the db entries happen how it gets updated and all so this is like for onboarding uh uh part. So here when you're having a support of dual tokenization we we have introduced one more thing called like issuer. So in issuer what is uh in transaction detail table we'll be seeing two ref table like one is a card ref and another one would be issuer token ref. This card ref would be similar across network and issuer only the card token that we you'll be seeing right Right. So that will be uh uh like for uh what do you say different for network and for the issuer. So we'll be having totally six entries here like one three with respect to network and three with respect to issure. So in transaction detail table right so this how it looks. First would be the token And next would be the issue token. See issuer token. And next this would be the token. This token that you're saying is of network reference ID. This token that you see it for issue token reference ID. The rest all the things that you see it is same how you see it for single tokenization. Only we will be having an uh entry specifying whether it is a network one or an issuer. One is Is it clear or am I confusing you guys?
It's clear.
It's clear, right? So this is about like single uh dual tokenization. So similarly what she explained for single like we have two flows like one is like you can do it like repeat entry, repeat transaction and uh another one would be repeat with tabb. So here uh we are we as of now for dual tokenization uh repeat token plus TAVV that we have it for network condition and issue it's not supported because uh independent PR of API cards is like still um mean under review. So after that only we'll be able to do this token plus TB flow for an issuer and network but the other things like repeat transaction using just the stored card value right so that is similar here the entry that you do it right that is like you take Take the store card table entry like token entry from here. This token value that you take it right that you have to specify whether you are taking it from uh network side or you are taking it from issuer side rest all things that remains are same as single tokenization itself and uh siman had explained on um v4/ uh delete and uh uh uh card uh like / token delete right so that is similar here thing is like whatever the entry that you want to delete right token entry so I'll show you here so here that the card reference that you are seeing hit here right so this is like I I I'm trying to delete an uh token here If you see the network token, this is the card reference of stored card table which gives me the entry because here card reference remains the same for network and issuer. So uh card reference won't change only the card token will be changing. Card token for network will be different. Card token for issuer will be different. Card reference will be same. So when you query using this card reference for stored card table, you'll be seeing two entries. One is for entry for network and another for issue. So using this uh SL uh card /delete thing you can delete one of the token. So I've deleted see this is how the entry looks after deleting a network token. So when you do a transaction on top of this you'll be able to do only for the issue tokenization because network would be deleted from AR.
Why network will be deleted?
So here we have this option right like Siman showed no we can uh do the slash delete option card /delete option right so with that when you do it you'll be deleting one of the token from our end so the other token whatever that is there only that will be available for the transaction and uh if you do that v4/get uh delete that will delete the whole entry it will delete both the network side and the issuer side Okay.
So that time you have to do one more onboarding. See tokenization uh I think uh Siman had already told like uh there are two things like one is like if you're using the same card same customer you can't do it like you have to use a different one to do an onboarding on it and this onboarding will be supporting some 100 uh uh times that's it like more than that you have to delete the entries and then only it will support. Okay. So this is about dual tokenization. Uh any doubts
is any merchant live with dual tokenization.
No as of now we don't have any merchant live and we have not enabled this. The code has been moved to prod but uh uh we haven't enabled uh it because um few of the things like like uh API cards needs to be tested. So that is still pending. So after that only we'll be able to do it. So this is what I was telling the card token right those will be different for network and issuer but the card reference remains same across both. So this is the one that Simbran explained right delete token tokenization/delete and v4/card delete. So this will delete both network token, issuer token and the entry that we have in store card table. So when Simbin deleted this we were getting after she acquired the same one card reference we saw right there were no records.
Yes.
Huh. So this is what it will delete the entry. So that is why we won't see any record for it. When you delete only one of the token uh in my screenshot I showed right you'll be able to see either one of them like whichever is left out. And uh uh we have this uh priority sets like uh the token block that you see it right. The first entry we need to say this entry this entry that you see it right. There is one list uh list priority table wherein it will have whether Which one if the card supports for dual tokenization from which it has to first get tokenized and in this block which needs to be shown for the merchant is it a network token or an issue token. So there is one priority set that is there uh you can enable that and uh check it which which is having what like is it from network and first it is getting tokenized or is it from issuer end. any doubts. So if you have understood the concept of what Siman told right like till now she explained. So on top of that this is an add-on given just an add-on given. So if you're not able to understand that like you won't be able to understand the dual tokenization concept. Yeah, simple.
Uh, shishank can you I forgot to explain the merchant based concern. Can you tell that also that one is?
So concern is uh so there are two one two ways of doing uh tok uh providing the consent. One is like when you have this safe card uh this thing right we have it save to locker as true. One second. So this save to locker when you give it as true you will get consent page what she showed like you saw right secure and pay page. So there's like normal uh tokenization. So what we given one more support is like uh we we we give a merchant telling like we merchant based consent like means merchant will tokenize we will not show the consent page so you won't get this secure and um pay option in your uh payment while doing a payment but the tokenization would happen from the back end. So if you pass this tokenize as true right this entry and do a transaction you won't See um / consent past/conent you will see only the past URL and do the transaction and uh after the transaction is charged so we will be seeing order status right in that order status you'll see the token blocks though you have not got uh the uh consent like secure and pay option in your payment while doing a payment the transaction would be tokenized the card would be tokenized so there is a code that is given like merchant this is nothing but the merchant based consent so here tokenization is true so you will not get and when this tokenization is false it's nothing but the previous case what siman had done so false or you don't pass nothing is the case where you give only the safe to locker as true and you get the consent uh sorry I can't show because the card that I've used of someone else card. So I have to get the OT piece from there. Uh like if you can share your card I can Paul is there in this call is it?
Yes.
Okay then I can use his So here I have not have not got the consent. I have passed this tokeniz as true. Okay. Why it is coming is like this. One second.
OTP Paul. Your voice is people 412. See, I got token tokens both block and then uh here uh using token is false. You simran told right like by using this entry you can get to know whether this is a repeat transaction or it is like onboarding transaction. So this is the one and I pass like save to locker as true and uh here without I've got without uh that secure and pay that consent page the card is tokenized there's the merchant side tokenization happening merchant side consent There's the difference of it. So when you pass it as false that is nothing but uh you will get the secure and pay option like the consent page wherein you pay and then you will get the this thing one more thing here you see it right
hello
uh yeah one minute so is true only like we won't get consent but it got tokenized but when we pass as false it is declining the tokenization you won't get the content and uh it won't go to tokenization flow itself.
Okay.
So the what siman is telling is like when you see that option like secure and pay right instead of secure and pay if you cancel that consent page here the user consent will be false and the token block here that you're seeing right that block you won't be able to see the tokenization won't happen but the transaction would be charged. Okay, that is what you are telling Sim. Yeah, that's it. Okay. And uh any other doubts like any questions?
Anything? Josha will tell about CVless transaction.
So CVV list uh they have got a new flow for CV list transaction that is like in token repeat uh we no need to pass CVB without CVV also we can uh proceed with for token repeat transactions so as of now uh this is supported by four gateways like we use cyersource uh bv2 and uh one more thing yeah
yes we have uh merchant based cut over also and gateway based cut over also Yeah. So uh um when you're testing okay I'll pass authenticated by gateway
which one you don't pass
for only for token repeat right well for token onboarding we pass CVB
for repeat transaction uh
those
how the uh card gets authenticated either by network or simply by the bank side
network side only
it won't it won't consider CVV itself even though if we pass CVB it won't consider itself
won't consider
it won't consider the CVB itself for this flow
currently pay you
no no no pay you razor pay cyber source and pay MV2
so even if you pass as like null or uh empty string or invalid CVB valid CVB also it won't consider itself If you enable CV less flow that's all
over it will consider
so whenever you're testing any tokenization flows you can test this also sim will share the service what That's it about tokenization. Any queries? onboarding. If you want to do if you do the DOTP flow with token onboarding, it will you will it will fall back to 3DS only. It will only when you are doing the token repeat only will support consent enable tokl after that repeat.
That's right. So if you're if when ever you are doing the DODP transaction uh if you see the tokenization fall back to 3DS this is the reason and that cut over is enabled.
So if the redirection that show page URL config is enabled then do we get a consent page or URL or normal redirection for onboarding flow?
No for onboarding flow you'll get it will fall back to the only you for repeat only uh it will we will get the DTP block for tokenization
and 7 to9 call is there at that time
today 79 is about okay tomorrow
